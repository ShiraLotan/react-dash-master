{"version":3,"sources":["components/main/Widgets.js","components/main/chart.js","components/main/Footer.js","components/main/RouteBtn.js","components/main/Dashboard.js","components/Feature/Info.js","components/Table/Th.js","components/Table/Td.js","components/Table/Tr.js","consts.js","components/Feature/Grid.js","state/action.js","state/fetch.js","components/Feature/Features.js","components/Feature/Deatils.js","App.js","serviceWorker.js","state/reducers/dataReducer.js","state/reducers/widgetReducer.js","state/reducers/signReducer.js","state/reducers/index.js","state/store.js","index.js","images/logo.jpg"],"names":["Widgets","data","className","name","value","Chart","width","height","barSize","Widget1","Widget2","amt","barCategoryGap","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","Footer","src","logo","alt","RouteBtn","history","useHistory","onClick","push","connect","state","widgetReducer","widgets","map","x","i","key","Info","country","day","Th","title","Td","item","Tr","isParent","recovery","t","constants","tableHeaders","Grid","fetchedData","row","fetchDataSuccess","type","filterData","filterDataToArr","Object","entries","response","parameters","tableRows","dispatch","setFetchData","a","fetch","method","headers","res","json","filterDataObj","console","log","signUser","useEffect","_","isEmpty","dataReducer","w","Details","useLocation","App","to","path","Boolean","window","location","hostname","match","initialState","loading","action","isSignin","signInReducer","combineReducers","logger","createLogger","predicate","getState","store","createStore","rootReducer","applyMiddleware","ReduxThunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.a5dec4aa.chunk.js","sourcesContent":["import React from 'react';\nimport '../../style/widget.scss';\n\nfunction Widgets({ data }) {\n\n  return (\n    <div className=\"Widgets animation-entrance\">\n      <div className=\"container\">\n        <div className=\"widget-name\">\n          {data.name}\n        </div>\n        <div className=\"widget-value\">\n          <span className=\"color-value\">{data.value}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Widgets;\n","import React from \"react\";\nimport {\n  ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\nimport '../../style/chart.scss';\n\nexport default function Chart() {\n\n\n  const data = [\n    {\n      name: '', Widget1: 33, Widget2: 39, amt: 2400,\n    },\n    {\n      name: '', Widget1: 45, Widget2: 42, amt: 2210,\n    }\n  ];\n\n  return (\n    <div className=\"Chart\">\n      <h1>Check your statistics:</h1>\n      <ResponsiveContainer width=\"100%\" height={500}>\n        <BarChart\n        barSize={300}\n          data={data}\n          barCategoryGap={2}\n          margin={{\n            top: 5, right: 20, left: 10, bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"10 10\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"Widget1\" fill=\"#8884d8\" />\n          <Bar dataKey=\"Widget2\" fill=\"#82ca9d\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}","import React from \"react\";\nimport logo from '../../images/logo.jpg';\nimport '../../style/footer.scss';\n\nexport default function Footer(){\n    return (\n        <div className=\"Footer\">\n            <img src={logo} alt=\"logo\"/>\n        </div>\n    )\n}   \n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport '../../style/widget.scss';\n\nexport default function RouteBtn() {\n    const history = useHistory();\n\n    return (\n        <div className=\"RouteBtn animation-entrance\">\n            <div className=\"container\">\n                <span onClick={() => history.push(\"/feature\")}>To Features</span>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport { connect } from 'react-redux';\nimport Widgets from \"./Widgets\";\nimport Chart from \"./chart\";\nimport Footer from \"./Footer\";\nimport RouteBtn from \"./RouteBtn\";\nimport '../../style/dashboard.scss';\n\nfunction Dashboard({ state }) {\n\n  return (\n    <div className=\"Dashboard\">\n      <div className=\"widget-wrapper\">\n        <div className=\"widgets-items\">\n          {state ? state.map((x, i) => <Widgets key={i} data={x} />) : null}\n        </div>\n        <div className=\"btn-items\">\n          {state ? <RouteBtn widgets={state} /> : null}\n        </div>\n      </div>\n      <Chart />\n      <Footer />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state.widgetReducer.widgets\n  }\n}\n\nexport default connect(mapStateToProps)(Dashboard)\n","import React from \"react\";\r\nimport '../../style/info.scss';\r\n\r\nexport default function Info({ country, day }) {\r\n    return (\r\n        <div className=\"Info\">\r\n            <div className=\"info-top\">\r\n                <h1>Covid-19 History page</h1>\r\n                <div className=\"blob\"></div>\r\n            </div>\r\n            <div className=\"info-wrapper\">\r\n                <span><span className=\"info-title\">Country:</span> {country}</span>\r\n                <span><span className=\"info-title\">Day:</span> {day}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport '../../style/grid.scss';\r\n\r\nexport default function Th({title}) {\r\n    return (\r\n        <th className=\"Th header\">\r\n            <h3>{title}</h3>\r\n        </th>\r\n    )\r\n}","import React from \"react\";\r\nimport '../../style/grid.scss';\r\n\r\nexport default function Td({item}) {\r\n    return (\r\n        <td className=\"Td\">\r\n            {item}\r\n        </td>\r\n    )\r\n}","import React from \"react\";\r\nimport Th from \"./Th\";\r\nimport Td from \"./Td\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../../style/grid.scss';\r\n\r\nexport default function Tr({data, isParent}) {\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <tr className=\"Tr\" onClick={()=>history.push(\"/details\", {recovery: data[0]})}>\r\n            {isParent ? data.map((t, i)=> <Th key={i} title={t}/>): data.map((t,i)=>(i>0 ?<Td key={i} item={t}/>: null))}\r\n        </tr>\r\n    )\r\n}","export const constants= {\n    getWidget: 'GET_WIDGET',\n    setWidget: 'SET_WIDGET',\n    setData: 'SET_DATE',\n    getData: 'GET_DATA',\n    fetchRequest: 'FETCH_DATA_REQUEST',\n    fetchDataSuccess: 'FETCH_DATA_SUCCESS',\n    fetchDataFailure: 'FETCH_DATA_FAILUER',\n    signUser: 'SIGN_USER'\n  }\n\nexport const tableHeaders = [\n  'Time',\n  'New deaths',\n  'Total deaths',\n  'Total test',\n  'Active',\n  'Critical'\n]","import React from \"react\";\r\nimport Tr from \"../Table/Tr\";\r\nimport { tableHeaders } from '../../consts';\r\nimport '../../style/grid.scss';\r\n\r\nexport default function Grid({ fetchedData }) {\r\n\r\n    return (\r\n        <div className=\"Grid\">\r\n            <table className=\"zigzag\">\r\n                <thead>\r\n                    <Tr isParent={true} data={tableHeaders}/>\r\n                </thead>\r\n                <tbody>\r\n                    {fetchedData.map((row, i )=> <Tr key={i} isParent={false} data={row}/>)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}","import {constants} from '../consts';\n\nexport const getWidget = () => {\n  return{\n    type: constants.getWidget\n  }\n}\n\nexport const setWidget = () => {\n  return{\n    type: constants.getWidget\n  }\n}\n\nexport const setData = (data) => {\n  return{\n    type: constants.setData,\n    data\n  }\n}\n\nexport const fetchDataRequest = () => {\n  return{\n    type: constants.fetchRequest,\n  }\n}\n\nexport const fetchDataSuccess = (data) => {\n  return{\n    type: constants.fetchDataSuccess,\n    data\n  }\n}\n\nexport const fetchDataFaliure = () => {\n  return{\n    type: constants.fetchDataFailure,\n  }\n}\n\nexport const signUserAction = () => {\n  return{\n    type: constants.signUser\n  }\n}\n","\r\nimport { fetchDataRequest, fetchDataSuccess, fetchDataFaliure } from '../state/action';\r\n\r\nexport const fetchData = () => {\r\n    return async function (dispatch) {\r\n        dispatch(fetchDataRequest());\r\n        try {\r\n            const res = await fetch('https://covid-193.p.rapidapi.com/history?day=2020-06-02&country=usa', {\r\n                method: 'GET',\r\n                headers: {\r\n                    \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                    \"x-rapidapi-key\": \"d48d540977msh3fa07820543a991p154cb1jsn3f9c7a3051fb\"\r\n                }\r\n            });\r\n            const data = await res.json();\r\n            const filterDataObj = filterData(data);\r\n            \r\n            dispatch(fetchDataSuccess(filterDataObj));\r\n        } catch (error) {\r\n            console.log(error) //ADD ERROR HANDLING\r\n            dispatch(fetchDataFaliure());\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst filterData = (data)=>{\r\n    const filterDataToArr = []\r\n    for (const [key, value] of Object.entries(data.response)) {\r\n        const row = [value[\"cases\"][\"recovered\"],value[\"time\"],value[\"deaths\"][\"new\"],value[\"deaths\"][\"total\"],value[\"tests\"][\"total\"],value[\"cases\"][\"active\"],value[\"cases\"][\"critical\"]];      \r\n        filterDataToArr.push(row)\r\n    }\r\n    const newObj = {\r\n        country: data.parameters.country,\r\n        day: data.parameters.day,\r\n        tableRows: filterDataToArr\r\n    };\r\n    return newObj\r\n\r\n}","import React, { useEffect} from \"react\";\nimport { connect } from 'react-redux';\nimport Widgets from \"../main/Widgets\";\nimport logo from '../../images/logo.jpg';\nimport _ from 'lodash';\nimport Info from \"./Info\";\nimport Grid from \"./Grid\";\nimport { fetchData } from '../../state/fetch';\nimport '../../style/features.scss';\nimport { signUserAction } from '../../state/action';\n\nfunction Features({state, setFetchData, signUser}) {\n\n    useEffect(() => {\n        if(_.isEmpty(state.dataReducer.data)){\n            setFetchData();\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps \n            //PLEASE CHECK README FILE FOR EXTRA DETAILS\n\n            \n    return (\n        <div className=\"Features\">\n            <img className=\"flier\" src=\"https://img.icons8.com/doodle/48/000000/coronavirus.png\" alt=\"coronavirus\"/>\n            <div className=\"top-feature-bar\">\n\n                <img className=\"logo\" src={logo} alt='logo'/>\n                <div className=\"feature-widgets\">\n                {state ? state.widgetReducer.widgets.map((w, i) => <Widgets key={i} data={w} />): null}\n                </div>\n            </div>\n            <div className=\"log-out-bar\">\n                <i onClick={()=> signUser()} className=\"fas fa-user\"></i>\n                {state.dataReducer.data.country && state.dataReducer.data.day ? <Info country={state.dataReducer.data.country} day={state.dataReducer.data.day} /> : null}\n            </div>\n            {!_.isEmpty(state.dataReducer.data) ? <Grid fetchedData={state.dataReducer.data.tableRows} /> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        state: state\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setFetchData: () => dispatch(fetchData()),\n        signUser: ()=> dispatch(signUserAction())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Features);","import React from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport '../../style/details.scss';\r\n\r\nfunction Details() {\r\n    const location = useLocation();\r\n    const recovery = location.state.recovery;\r\n  return (\r\n    <div className=\"Details\">\r\n        <div className=\"container\">\r\n          <div className=\"balloon\">\r\n            <div><span>H</span></div>\r\n            <div><span>O</span></div>\r\n            <div><span>O</span></div>\r\n            <div><span>R</span></div>\r\n            <div><span>A</span></div>\r\n            <div><span>Y</span></div>\r\n          </div>\r\n          <h1>Recovery number: {recovery}</h1>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Details;\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport Dashboard from './components/main/Dashboard';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Features from './components/Feature/Features';\r\nimport Details from './components/Feature/Deatils';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <div>\r\n          <nav>\r\n            <ul className='nav-bar'>\r\n              <li>\r\n                <Link to=\"/\">Dashboard</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/feature\">Features</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n\r\n          <Switch>\r\n            <Route path=\"/feature\">\r\n              <Features />\r\n            </Route>\r\n            <Route path=\"/details\">\r\n              <Details/>\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Dashboard />\r\n            </Route>\r\n\r\n\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { constants } from '../../consts';\r\n\r\nconst initialState = {\r\n  data: {},\r\n  loading: false\r\n}\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case(constants.fetchRequest):\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case(constants.fetchDataSuccess):\r\n      return{\r\n        ...state,\r\n        loading: false,\r\n        data: action.data\r\n      }\r\n    case(constants.fetchDataFailure):\r\n      return{\r\n        ...state,\r\n        loading: false\r\n      }\r\n    case constants.getData:\r\n      return state.data;\r\n\r\n    case constants.setData:\r\n      return{\r\n        ...state,\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default dataReducer;","import { constants } from '../../consts';\n\nconst initialState = {\n  widgets: [\n    { name: 'First Widget', value: 33 },\n    { name: 'Second Widget', value: 46 }\n  ]\n}\n\nconst widgetReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case constants.getWidget:\n      return state.widgets;\n    default:\n      return state\n  }\n}\n\nexport default widgetReducer;","import {\r\n    constants\r\n} from '../../consts';\r\n\r\nconst initialState = {\r\n    isSignin: true\r\n}\r\n\r\nconst signInReducer = (state = initialState, action) => {\r\n    console.log(state)\r\n    switch (action.type) {\r\n        case (constants.signUser):\r\n            return {\r\n                isSignin: !state.isSignin\r\n            }\r\n\r\n            default:\r\n                return state\r\n    }\r\n}\r\n\r\nexport default signInReducer;","import dataReducer  from '../reducers/dataReducer';\r\nimport widgetReducer  from '../reducers/widgetReducer';\r\nimport signInReducer from './signReducer'\r\nimport  {combineReducers}  from 'redux'\r\n\r\n\r\nexport default combineReducers({\r\n    dataReducer,\r\n    widgetReducer,\r\n    signInReducer\r\n  })","import { createStore } from \"redux\";\r\nimport rootReducer from './reducers'\r\nimport { applyMiddleware } from 'redux';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport {\r\n    constants\r\n} from '../consts';\r\n\r\nconst logger = createLogger({\r\n    predicate: (getState, action) => action.type === constants.signUser,\r\n    });\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(ReduxThunk, logger));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from './state/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.7d8e2485.jpg\";"],"sourceRoot":""}